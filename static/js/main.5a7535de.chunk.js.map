{"version":3,"sources":["Apps.js","component/buttonPanel.jsx","component/display.jsx","index.js"],"names":["Apps","state","result","display","buttons","id","value","type","isDec","RegExp","isNull","isOperator","isDoubeOps","isStartZero","handleDecimal","test","setState","handleResult","eval","handleZero","handleButton","val","handleOperator","slice","handleClear","className","onDisplay","this","onResult","onButton","onDecimal","onZero","onClear","onOperator","Component","ButtonPanel","props","map","bttn","onClick","Display","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a7535de.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ButtonPanel from \"./component/buttonPanel\";\r\nimport Display from \"./component/display\";\r\n\r\nclass Apps extends Component {\r\n  state = {\r\n    result: \"0\",\r\n    display: \"0\",\r\n    buttons: [\r\n      { id: \"zero\", value: \"0\", type: \"num\" },\r\n      { id: \"one\", value: \"1\", type: \"num\" },\r\n      { id: \"two\", value: \"2\", type: \"num\" },\r\n      { id: \"three\", value: \"3\", type: \"num\" },\r\n      { id: \"four\", value: \"4\", type: \"num\" },\r\n      { id: \"five\", value: \"5\", type: \"num\" },\r\n      { id: \"six\", value: \"6\", type: \"num\" },\r\n      { id: \"seven\", value: \"7\", type: \"num\" },\r\n      { id: \"eight\", value: \"8\", type: \"num\" },\r\n      { id: \"nine\", value: \"9\", type: \"num\" },\r\n      { id: \"equals\", value: \"=\", type: \"eq\" },\r\n      { id: \"add\", value: \"+\", type: \"operator\" },\r\n      { id: \"subtract\", value: \"-\", type: \"operator\" },\r\n      { id: \"multiply\", value: \"*\", type: \"operator\" },\r\n      { id: \"divide\", value: \"/\", type: \"operator\" },\r\n      { id: \"decimal\", value: \".\", type: \"dec\" },\r\n      { id: \"clear\", value: \"AC\", type: \"clr\" },\r\n    ],\r\n  };\r\n  isDec = new RegExp(\"[.]\");\r\n  isNull = new RegExp(\"^$|^[0]\");\r\n  isOperator = new RegExp(\"^[+*-/]|[+*-/]$\");\r\n  isDoubeOps = new RegExp(\"([+-/*]{2})$\");\r\n  isStartZero = new RegExp(\"^[0]\");\r\n\r\n  handleDecimal = () => {\r\n    let display = this.state.display;\r\n    let result = this.state.result;\r\n    if (!this.isDec.test(result)) {\r\n      if (this.isNull.test(result)) {\r\n        result = \"0.\";\r\n        display = result;\r\n      } else {\r\n        result += \".\";\r\n        display += \".\";\r\n      }\r\n    }\r\n    this.setState({\r\n      display,\r\n      result,\r\n    });\r\n  };\r\n\r\n  handleResult = () => {\r\n    let result = eval(this.state.display);\r\n    this.setState({\r\n      display: result,\r\n      result,\r\n    });\r\n  };\r\n  handleZero = () => {\r\n    let display = this.state.display;\r\n    let result = this.state.result;\r\n    if (!this.isStartZero.test(display) || this.isDec.test(display)) {\r\n      display += \"0\";\r\n      result += \"0\";\r\n    }\r\n    this.setState({\r\n      display,\r\n      result,\r\n    });\r\n  };\r\n  handleButton = (val) => {\r\n    let display = this.state.display;\r\n    let result = this.state.result;\r\n    if (this.isNull.test(display) && !this.isDec.test(display)) {\r\n      display = val;\r\n\r\n      result = val;\r\n    } else {\r\n      if (this.isOperator.test(result) && !this.isDec.test(result)) {\r\n        result = val;\r\n      } else {\r\n        result += val;\r\n      }\r\n      display += val;\r\n    }\r\n    this.setState({\r\n      display,\r\n      result,\r\n    });\r\n  };\r\n  handleOperator = (val) => {\r\n    let display = this.state.display;\r\n    let result = this.state.result;\r\n\r\n    if (this.isNull.test(display)) {\r\n      display = val;\r\n    } else {\r\n      if (this.isOperator.test(result)) {\r\n        if (this.isDoubeOps.test(display)) {\r\n          display = display.slice(0, -2);\r\n        } else if (val !== \"-\" || result === \"-\") {\r\n          display = display.slice(0, -1);\r\n        }\r\n        display += val;\r\n      } else {\r\n        display += val;\r\n      }\r\n    }\r\n    result = val;\r\n    this.setState({\r\n      display,\r\n      result,\r\n    });\r\n  };\r\n  handleClear = () => {\r\n    this.setState({\r\n      display: \"0\",\r\n      result: 0,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Display\r\n          onDisplay={this.state.display}\r\n          onResult={this.state.result}\r\n        ></Display>\r\n        <ButtonPanel\r\n          buttons={this.state.buttons}\r\n          onButton={this.handleButton}\r\n          onDecimal={this.handleDecimal}\r\n          onZero={this.handleZero}\r\n          onResult={this.handleResult}\r\n          onClear={this.handleClear}\r\n          onOperator={this.handleOperator}\r\n        ></ButtonPanel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Apps;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ButtonPanel extends Component {\r\n  render() {\r\n    const {\r\n      buttons,\r\n      onButton,\r\n      onDecimal,\r\n      onZero,\r\n      onResult,\r\n      onClear,\r\n      onOperator,\r\n    } = this.props;\r\n    return (\r\n      <div className=\"row grid-button\">\r\n        {buttons.map((bttn) => (\r\n          <button\r\n            className={\r\n              bttn.type === \"eq\"\r\n                ? \"btn btn-primary\"\r\n                : bttn.type === \"clr\"\r\n                ? \"btn btn-danger\"\r\n                : bttn.id === \"zero\"\r\n                ? \"btn btn-secondary big-z\"\r\n                : bttn.type === \"operator\"\r\n                ? \"btn btn-light \" + bttn.id\r\n                : \"btn btn-secondary num\"\r\n            }\r\n            key={bttn.value}\r\n            id={bttn.id}\r\n            onClick={() =>\r\n              bttn.id === \"zero\"\r\n                ? onZero()\r\n                : bttn.id === \"decimal\"\r\n                ? onDecimal()\r\n                : bttn.id === \"equals\"\r\n                ? onResult()\r\n                : bttn.id === \"clear\"\r\n                ? onClear()\r\n                : bttn.type === \"operator\"\r\n                ? onOperator(bttn.value)\r\n                : onButton(bttn.value)\r\n            }\r\n          >\r\n            {bttn.value}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ButtonPanel;\r\n","import React, { Component } from \"react\";\r\n\r\nconst Display = ({ onDisplay, onResult }) => {\r\n  return (\r\n    <div className=\"row display-container\">\r\n      <div>\r\n        <h3>{onDisplay}</h3>\r\n        <h3 id=\"display\">{onResult}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Display;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Apps from \"./Apps\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Apps />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}